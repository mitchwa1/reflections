Udacity - How to Use Git & Github
Lesson 2 reflections
1) What happens when you initialize a repository? Why do you need to do it?
  when you initialize a repository it creates a sort of "instance" or a placeholder for your files you may soon commit.  

2) How is the staging area different from the working directory and the repository? What value do you think it offers?
  staging area is between commit and git - it has no direct affiliation with the working directory, except through "status" - this is valuable because it does not change anything directly in your working directory without a "commit"

3) How can you use the staging area to make sure you have one commit per logical change?
  you can view the staging area, or what is/isn't part of a commit by using git log.

4) What are some situations when branches would be helpful in keeping your history organized? How would branch's help?
  it can keep a working directory and you can use branches for experimental decision, such as adding different languages.

5) How do the diagrams help you visualize the branch structure?
  by visualizing branches and therefore changes made overall vs. the master project file

6) What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
  you create a new master.  It is represented in diagrams like the merging of two branches.

7) What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
  automatic merging may merge files and parts of a file which you do not ideally want to merge, but it is fast and easy.  Manually merging is a better option for accuracy, but may take significantly more time.
